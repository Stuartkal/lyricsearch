{"version":3,"sources":["components/Navigation/Spinner.gif","components/Navigation/NavBar.js","Context.js","components/Navigation/Spinner.js","components/Songs/Song.js","components/Songs/Songs.js","components/Songs/Search.js","components/Navigation/Index.js","components/Songs/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","console","log","data","message","body","catch","err","props","children","Component","Consumer","Navigation_Spinner","src","Spinner","alt","style","width","margin","display","Song","track","artist_name","track_name","album_name","react_router_dom","to","track_id","Songs","undefined","Fragment","map","item","Songs_Song","Search","trackTitle","onChange","e","defineProperty","target","name","findLyrics","preventDefault","onSubmit","bind","placeholder","Index","Songs_Search","components_Songs_Songs","Lyrics","lyrics","match","params","id","_this$state","keys","lyrics_body","album_id","explicit","dist_default","format","updated_time","App","Context_Provider","Navigation_NavBar","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8966fee8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spinner.fc54e0c4.gif\";","import React from 'react'\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-warning mb-5\">\r\n            <span className=\"navbar-brand mb-0 h1 mx-auto\">\r\n                My Lyrics\r\n            </span>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext()\r\n\r\nconst reducer = (state,action) => {\r\n    switch(action.type){\r\n        case 'SEARCH_TRACKS':\r\n        return({ \r\n            ...state,\r\n            track_list : action.payload,\r\n            heading: 'Search Results'\r\n        }\r\n        )\r\n        default: \r\n        return state\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        track_list: [],\r\n        heading : 'Top 10 Hits',\r\n        dispatch : action => this.setState(state => reducer(state,action))\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?=1&page_size=10&country=ug&f_has_lyrics=1&apikey=ec5ae9ccb5f98a1a066c6364fceb06e6`)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            \r\n            this.setState({track_list: res.data.message.body.track_list})\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n           </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer\r\n\r\n\r\n","import React from 'react'\r\nimport Spinner from './Spinner.gif'\r\n\r\nexport default  () => {\r\n    return (\r\n        <div>\r\n            <img\r\n            src={Spinner}\r\n            alt=\"Loading...\"\r\n            style={{width:'200px', margin:'40px auto', display:'block'}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Song(props) {\r\n\r\n    const {track} = props\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"card mb-4 shadow-sm\">\r\n                <div className=\"card-body\">\r\n                    <h5>{track.artist_name}</h5>\r\n                    <p className=\"card-text\">\r\n                        <strong><i className=\"fa fa-play\"/>Song</strong>{track.track_name}\r\n                        <br/>\r\n                        <strong><i className=\"fa fa-compact-disc\"/>Album</strong>{track.album_name}\r\n                    </p>\r\n                    <Link to={`lyrics/track/${track.track_id}`} className=\"btn btn-warning\">\r\n                        <i className=\"fa fa-chevron-right\"/>\r\n                        View Lyrics\r\n                    </Link> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../Context'\r\nimport Spinner from '../Navigation/Spinner'\r\nimport Song from '../Songs/Song'\r\n\r\nexport class Songs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Consumer>\r\n                    {value => {\r\n                        \r\n                        const {track_list, heading} = value\r\n\r\n                        if(track_list === undefined || track_list.length === 0){\r\n                            return <Spinner/>\r\n                        }else\r\n                        {\r\n                            return (\r\n                                <React.Fragment>\r\n                                    <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                                    <div className=\"row\">\r\n                                        {track_list.map(item => (\r\n                                            <Song\r\n                                            key = {item.track.track_id} \r\n                                            track = {item.track}/>\r\n                                        ))}\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )\r\n                        }\r\n                        \r\n                    }}\r\n                </Consumer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Songs\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {Consumer} from '../../Context'\r\n\r\nexport class Search extends Component {\r\n\r\n    state = {\r\n        trackTitle:''\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    findLyrics = (dispatch,e) => {\r\n        e.preventDefault()\r\n\r\n        axios.get(`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=ec5ae9ccb5f98a1a066c6364fceb06e6`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: 'SEARCH_TRACKS',\r\n                payload: res.data.message.body.track_list\r\n            })\r\n\r\n            this.setState({trackTitle:''})\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value \r\n                    return(\r\n                        <div className=\"card card-body mb-4 p-4\">\r\n                            <h1 className=\"display-4 text-center\">\r\n                                <i className=\"fa fa-music\"/>\r\n                                Search For A Song\r\n                            </h1>\r\n                            <p className=\"lead text-center\">Get Song Lyrics Here</p>\r\n                            <form onSubmit={this.findLyrics.bind(this, dispatch)}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                    className=\"form-control form-control-lg\" \r\n                                    type=\"text\"\r\n                                    placeholder=\"Song Title...\"\r\n                                    name=\"trackTitle\"\r\n                                    value={this.state.trackTitle}\r\n                                    onChange={this.onChange}\r\n                                    />\r\n                                    <button\r\n                                    className=\"btn btn-warning btn- lg mt-2\"\r\n                                    type=\"submit\"\r\n                                    >\r\n                                    Find Song Lyrics\r\n                                    </button>\r\n                                    \r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport Songs from '../Songs/Songs'\r\nimport Search from '../Songs/Search'\r\n\r\nfunction Index() {\r\n    return (\r\n        <div className=\"index\">\r\n            <Search/>\r\n            <Songs/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Spinner from '../Navigation/Spinner'\r\nimport Moment from 'react-moment'\r\n\r\nexport class Lyrics extends Component {\r\n\r\n    state = {\r\n        track:{},\r\n        lyrics:{}\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=ec5ae9ccb5f98a1a066c6364fceb06e6`)\r\n        .then(res => {\r\n\r\n            //console.log(res.data)\r\n            this.setState({lyrics: res.data.message.body.lyrics})\r\n\r\n            return(\r\n                axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=ec5ae9ccb5f98a1a066c6364fceb06e6`)\r\n\r\n            )\r\n        })\r\n        .then(res =>{\r\n            //console.log(res.data)\r\n            this.setState({track: res.data.message.body.track})\r\n        })\r\n        .catch(err => console.log(err) )\r\n    }\r\n\r\n    render() {\r\n        const {track , lyrics} = this.state\r\n\r\n        if(\r\n            track === undefined || \r\n            lyrics === undefined || \r\n            Object.keys(track).length === 0 || \r\n            Object.keys(lyrics).length === 0){\r\n            return(\r\n                    <Spinner/>\r\n            )\r\n        }else{\r\n            return(\r\n                <React.Fragment>\r\n                    <Link className=\"btn btn-warning btn-sm mb-4\" to=\"/\">\r\n                        Go Back\r\n                    </Link>\r\n                    <div className=\"card\">\r\n                        <h5 className=\"card-header\">\r\n                            {track.track_name} by {' '}\r\n                            <span className=\"text-secondary\">\r\n                                {track.artist_name}\r\n                            </span>\r\n                        </h5>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-text\">\r\n                                {lyrics.lyrics_body}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ul className=\"list-group mt-3\">\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Album Id : </strong>\r\n                            {track.album_id}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Album Name : </strong>\r\n                            {track.album_name}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Explixit Content : </strong>\r\n                            {track.explicit === 0 ? 'No' : 'Yes'}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Release Date : </strong>\r\n                            <Moment format=\"MM/DD/YYYY\">{track.updated_time}</Moment>\r\n                        </li>\r\n                    </ul>\r\n\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Lyrics\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport NavBar from './components/Navigation/NavBar'\nimport Index from './components/Navigation/Index'\nimport Lyrics from './components/Songs/Lyrics'\n\nimport {Provider} from './Context'\n\n\nfunction App() {\n  return (\n    <Provider>\n    <Router>\n      <div >\n      <div >\n        <React.Fragment>\n            <NavBar/>\n            <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Index}/>\n              <Route exact path=\"/lyrics/track/:id\" component={Lyrics}/>\n            </Switch>\n            </div>\n        </React.Fragment>\n        </div>\n        </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}